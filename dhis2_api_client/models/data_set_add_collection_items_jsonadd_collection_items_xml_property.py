from enum import Enum


class DataSetAddCollectionItemsJsonaddCollectionItemsXmlProperty(str, Enum):
    ACCESS = "access"
    AGGREGATIONTYPE = "aggregationType"
    ATTRIBUTEVALUES = "attributeValues"
    CATEGORYCOMBO = "categoryCombo"
    CODE = "code"
    COMPULSORYDATAELEMENTOPERANDS = "compulsoryDataElementOperands"
    COMPULSORYFIELDSCOMPLETEONLY = "compulsoryFieldsCompleteOnly"
    CREATED = "created"
    CREATEDBY = "createdBy"
    DATAELEMENTDECORATION = "dataElementDecoration"
    DATAENTRYFORM = "dataEntryForm"
    DATAINPUTPERIODS = "dataInputPeriods"
    DATASETELEMENTS = "dataSetElements"
    DESCRIPTION = "description"
    DIMENSIONITEM = "dimensionItem"
    DISPLAYDESCRIPTION = "displayDescription"
    DISPLAYFORMNAME = "displayFormName"
    DISPLAYNAME = "displayName"
    DISPLAYSHORTNAME = "displayShortName"
    EXPIRYDAYS = "expiryDays"
    FAVORITE = "favorite"
    FAVORITES = "favorites"
    FIELDCOMBINATIONREQUIRED = "fieldCombinationRequired"
    FORMNAME = "formName"
    FORMTYPE = "formType"
    HREF = "href"
    ID = "id"
    INDICATORS = "indicators"
    INTERPRETATIONS = "interpretations"
    LASTUPDATED = "lastUpdated"
    LASTUPDATEDBY = "lastUpdatedBy"
    LEGENDSET = "legendSet"
    LEGENDSETS = "legendSets"
    MOBILE = "mobile"
    NAME = "name"
    NOTIFICATIONRECIPIENTS = "notificationRecipients"
    NOTIFYCOMPLETINGUSER = "notifyCompletingUser"
    NOVALUEREQUIRESCOMMENT = "noValueRequiresComment"
    OPENFUTUREPERIODS = "openFuturePeriods"
    OPENPERIODSAFTERCOENDDATE = "openPeriodsAfterCoEndDate"
    ORGANISATIONUNITS = "organisationUnits"
    PERIODTYPE = "periodType"
    QUERYMODS = "queryMods"
    RENDERASTABS = "renderAsTabs"
    RENDERHORIZONTALLY = "renderHorizontally"
    SECTIONS = "sections"
    SHARING = "sharing"
    SHORTNAME = "shortName"
    SKIPOFFLINE = "skipOffline"
    STYLE = "style"
    TIMELYDAYS = "timelyDays"
    TRANSLATIONS = "translations"
    USER = "user"
    VALIDCOMPLETEONLY = "validCompleteOnly"
    VERSION = "version"
    WORKFLOW = "workflow"

    def __str__(self) -> str:
        return str(self.value)
